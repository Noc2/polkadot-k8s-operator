apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: polkadot-set-sentry
  labels:
    app: sentry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sentry
  serviceName: polkadot
  volumeClaimTemplates:
    - metadata:
        name: polkadot-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
        storageClassName: polkadot
  template:
    metadata:
      labels:
        app: sentry
    spec:
      containers:
        - name: polkadot
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          image: chevdor/polkadot
          command: [
            "polkadot",
            "--sentry",
            "--node-key", "0000000000000000000000000000000000000000000000000000000000000013", # Local node id: QmQMTLWkNwGf7P5MQv7kUHCynMg7jje6h3vbvwd2ALPPhm
            "--reserved-nodes", "/dns4/polkadot-service-validator/tcp/30333/p2p/QmQtR1cdEaJM11qBWQBd34FoSgFichCjhtsBfrUFsVAjZM",
            "--name", "IronoaSentry",
            #"--unsafe-rpc-external",
            #"--unsafe-ws-external",
            #"--rpc-cors=all",
            #"--no-telemetry",
          ]
          volumeMounts:
            - mountPath: "/data"
              name: polkadot-volume
          ports:
            - containerPort: 30333
            - containerPort: 9933
            - containerPort: 9944
---
apiVersion: v1
kind: Service
metadata:
  name: polkadot-service-sentry
spec:
  selector:
    app: sentry
  type: NodePort  
  ports:
    - protocol: TCP
      port: 30333
      targetPort: 30333
      name: a
    - protocol: TCP
      port: 9933
      targetPort: 9933 
      name: b
    - protocol: TCP
      port: 9944
      targetPort: 9933  
      name: c
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: polkadot-set-validator
  labels:
    app: validator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: validator
  serviceName: polkadot
  volumeClaimTemplates:
    - metadata:
        name: polkadot-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
        storageClassName: polkadot
  template:
    metadata:
      labels:
        app: validator
    spec:
      containers:
        - name: polkadot
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          image: chevdor/polkadot
          command: [
            "polkadot",
            "--validator",
            "--node-key", "0000000000000000000000000000000000000000000000000000000000000021", # Local node id: QmQtR1cdEaJM11qBWQBd34FoSgFichCjhtsBfrUFsVAjZM
            "--reserved-only",
            "--reserved-nodes", "/dns4/polkadot-service-sentry/tcp/30333/p2p/QmQMTLWkNwGf7P5MQv7kUHCynMg7jje6h3vbvwd2ALPPhm",
            "--name", "IronoaValidator",
            #"--unsafe-rpc-external",
            #"--unsafe-ws-external",
            #"--rpc-cors=all",
            #"--no-telemetry",
          ]
          volumeMounts:
            - mountPath: "/data"
              name: polkadot-volume
          ports:
            - containerPort: 30333
            - containerPort: 9933
            - containerPort: 9944
---
apiVersion: v1
kind: Service
metadata:
  name: polkadot-service-validator
spec:
  type: ClusterIP
  selector:
    app: validator
  ports:
    - protocol: TCP
      port: 30333
      targetPort: 30333
      name: a
    - protocol: TCP
      port: 9933
      targetPort: 9933
      name: b
    - protocol: TCP
      port: 9944
      targetPort: 9933
      name: c
---
#TODO test with minikube Cilium
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: np-validator
#spec:
#  podSelector:
#    matchLabels:
#      app: validator
#  policyTypes:
#    - Ingress
#    - Egress
#---
#apiVersion: networking.k8s.io/v1
#kind: NetworkPolicy
#metadata:
#  name: default-deny
#spec:
#  podSelector: {}
#  policyTypes:
#    - Egress
#    - Ingress